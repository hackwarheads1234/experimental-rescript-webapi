{
  "callbackFunctions": {
    "callbackFunction": {
      "UnderlyingSourceStartCallback": {
        "name": "UnderlyingSourceStartCallback",
        "signature": [
          {
            "type": "any",
            "nullable": false,
            "param": [
              {
                "name": "controller",
                "type": "ReadableStreamController",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "ReadableStreamController<R>"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "R"
          }
        ]
      },
      "UnderlyingSourcePullCallback": {
        "name": "UnderlyingSourcePullCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "controller",
                "type": "ReadableStreamController",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "ReadableStreamController<R>"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "R"
          }
        ]
      },
      "UnderlyingSourceCancelCallback": {
        "name": "UnderlyingSourceCancelCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "reason",
                "type": "any",
                "nullable": false,
                "optional": true,
                "variadic": false
              }
            ]
          }
        ]
      },
      "UnderlyingSinkStartCallback": {
        "name": "UnderlyingSinkStartCallback",
        "signature": [
          {
            "type": "any",
            "nullable": false,
            "param": [
              {
                "name": "controller",
                "type": "WritableStreamDefaultController",
                "nullable": false,
                "optional": false,
                "variadic": false
              }
            ]
          }
        ]
      },
      "UnderlyingSinkWriteCallback": {
        "name": "UnderlyingSinkWriteCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "chunk",
                "type": "any",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "W"
              },
              {
                "name": "controller",
                "type": "WritableStreamDefaultController",
                "nullable": false,
                "optional": false,
                "variadic": false
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "W"
          }
        ]
      },
      "UnderlyingSinkCloseCallback": {
        "name": "UnderlyingSinkCloseCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": []
          }
        ]
      },
      "UnderlyingSinkAbortCallback": {
        "name": "UnderlyingSinkAbortCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "reason",
                "type": "any",
                "nullable": false,
                "optional": true,
                "variadic": false
              }
            ]
          }
        ]
      },
      "TransformerStartCallback": {
        "name": "TransformerStartCallback",
        "signature": [
          {
            "type": "any",
            "nullable": false,
            "param": [
              {
                "name": "controller",
                "type": "TransformStreamDefaultController",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "O"
          }
        ]
      },
      "TransformerFlushCallback": {
        "name": "TransformerFlushCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "controller",
                "type": "TransformStreamDefaultController",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "O"
          }
        ]
      },
      "TransformerTransformCallback": {
        "name": "TransformerTransformCallback",
        "signature": [
          {
            "type": "Promise",
            "subtype": {
              "type": "undefined",
              "nullable": false
            },
            "nullable": false,
            "param": [
              {
                "name": "chunk",
                "type": "any",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "I"
              },
              {
                "name": "controller",
                "type": "TransformStreamDefaultController",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "I"
          },
          {
            "name": "O"
          }
        ]
      },
      "QueuingStrategySize": {
        "name": "QueuingStrategySize",
        "signature": [
          {
            "type": "unrestricted double",
            "nullable": false,
            "param": [
              {
                "name": "chunk",
                "type": "any",
                "nullable": false,
                "optional": false,
                "variadic": false,
                "overrideType": "T"
              }
            ]
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "AudioWorkletProcessorConstructor": {
        "name": "AudioWorkletProcessorConstructor",
        "signature": [
          {
            "type": "AudioWorkletProcessor",
            "nullable": false,
            "param": [
              {
                "name": "options",
                "type": "object",
                "nullable": false,
                "optional": false,
                "variadic": false
              }
            ]
          }
        ],
        "overrideSignatures": [
          "new (options: any): AudioWorkletProcessorImpl"
        ]
      }
    }
  },
  "callbackInterfaces": {
    "interface": {}
  },
  "dictionaries": {
    "dictionary": {
      "EventInit": {
        "name": "EventInit",
        "members": {
          "member": {
            "bubbles": {
              "name": "bubbles",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "cancelable": {
              "name": "cancelable",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "composed": {
              "name": "composed",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            }
          }
        }
      },
      "CustomEventInit": {
        "name": "CustomEventInit",
        "members": {
          "member": {
            "detail": {
              "name": "detail",
              "default": "null",
              "required": false,
              "type": "any",
              "nullable": false,
              "overrideType": "T"
            }
          }
        },
        "extends": "EventInit",
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "EventListenerOptions": {
        "name": "EventListenerOptions",
        "members": {
          "member": {
            "capture": {
              "name": "capture",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            }
          }
        }
      },
      "AddEventListenerOptions": {
        "name": "AddEventListenerOptions",
        "members": {
          "member": {
            "passive": {
              "name": "passive",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "once": {
              "name": "once",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "signal": {
              "name": "signal",
              "required": false,
              "type": "AbortSignal",
              "nullable": false
            }
          }
        },
        "extends": "EventListenerOptions"
      },
      "TextDecoderOptions": {
        "name": "TextDecoderOptions",
        "members": {
          "member": {
            "fatal": {
              "name": "fatal",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "ignoreBOM": {
              "name": "ignoreBOM",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            }
          }
        }
      },
      "TextDecodeOptions": {
        "name": "TextDecodeOptions",
        "members": {
          "member": {
            "stream": {
              "name": "stream",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            }
          }
        }
      },
      "TextEncoderEncodeIntoResult": {
        "name": "TextEncoderEncodeIntoResult",
        "members": {
          "member": {
            "read": {
              "name": "read",
              "required": true,
              "type": "unsigned long long",
              "nullable": false
            },
            "written": {
              "name": "written",
              "required": true,
              "type": "unsigned long long",
              "nullable": false
            }
          }
        }
      },
      "ErrorEventInit": {
        "name": "ErrorEventInit",
        "members": {
          "member": {
            "message": {
              "name": "message",
              "default": "\"\"",
              "required": false,
              "type": "DOMString",
              "nullable": false
            },
            "filename": {
              "name": "filename",
              "default": "\"\"",
              "required": false,
              "type": "USVString",
              "nullable": false
            },
            "lineno": {
              "name": "lineno",
              "default": "0",
              "required": false,
              "type": "unsigned long",
              "nullable": false
            },
            "colno": {
              "name": "colno",
              "default": "0",
              "required": false,
              "type": "unsigned long",
              "nullable": false
            },
            "error": {
              "name": "error",
              "required": false,
              "type": "any",
              "nullable": false
            }
          }
        },
        "extends": "EventInit"
      },
      "PromiseRejectionEventInit": {
        "name": "PromiseRejectionEventInit",
        "members": {
          "member": {
            "promise": {
              "name": "promise",
              "required": true,
              "type": "object",
              "nullable": false,
              "overrideType": "Promise<any>"
            },
            "reason": {
              "name": "reason",
              "required": false,
              "type": "any",
              "nullable": false
            }
          }
        },
        "extends": "EventInit"
      },
      "MessageEventInit": {
        "name": "MessageEventInit",
        "members": {
          "member": {
            "data": {
              "name": "data",
              "default": "null",
              "required": false,
              "type": "any",
              "nullable": false,
              "overrideType": "T"
            },
            "origin": {
              "name": "origin",
              "default": "\"\"",
              "required": false,
              "type": "USVString",
              "nullable": false
            },
            "lastEventId": {
              "name": "lastEventId",
              "default": "\"\"",
              "required": false,
              "type": "DOMString",
              "nullable": false
            },
            "source": {
              "name": "source",
              "default": "null",
              "required": false,
              "type": "MessageEventSource",
              "nullable": true
            },
            "ports": {
              "name": "ports",
              "default": "",
              "required": false,
              "type": "sequence",
              "subtype": {
                "type": "MessagePort",
                "nullable": false
              },
              "nullable": false
            }
          }
        },
        "extends": "EventInit",
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "StructuredSerializeOptions": {
        "name": "StructuredSerializeOptions",
        "members": {
          "member": {
            "transfer": {
              "name": "transfer",
              "default": "",
              "required": false,
              "type": "sequence",
              "subtype": {
                "type": "object",
                "nullable": false
              },
              "nullable": false,
              "overrideType": "Transferable[]"
            }
          }
        }
      },
      "ReadableStreamGetReaderOptions": {
        "name": "ReadableStreamGetReaderOptions",
        "members": {
          "member": {
            "mode": {
              "name": "mode",
              "required": false,
              "type": "ReadableStreamReaderMode",
              "nullable": false,
              "comment": "Creates a ReadableStreamBYOBReader and locks the stream to the new reader.\n\nThis call behaves the same way as the no-argument variant, except that it only works on readable byte streams, i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading. The returned BYOB reader provides the ability to directly read individual chunks from the stream via its read() method, into developer-supplied buffers, allowing more precise control over allocation."
            }
          }
        }
      },
      "ReadableStreamIteratorOptions": {
        "name": "ReadableStreamIteratorOptions",
        "members": {
          "member": {
            "preventCancel": {
              "name": "preventCancel",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false,
              "comment": "Asynchronously iterates over the chunks in the stream's internal queue.\n\nAsynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader. The lock will be released if the async iterator's return() method is called, e.g. by breaking out of the loop.\n\nBy default, calling the async iterator's return() method will also cancel the stream. To prevent this, use the stream's values() method, passing true for the preventCancel option."
            }
          }
        }
      },
      "ReadableWritablePair": {
        "name": "ReadableWritablePair",
        "members": {
          "member": {
            "readable": {
              "name": "readable",
              "required": true,
              "type": "ReadableStream",
              "nullable": false,
              "overrideType": "ReadableStream<R>"
            },
            "writable": {
              "name": "writable",
              "required": true,
              "type": "WritableStream",
              "nullable": false,
              "comment": "Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.",
              "overrideType": "WritableStream<W>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          },
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "StreamPipeOptions": {
        "name": "StreamPipeOptions",
        "members": {
          "member": {
            "preventClose": {
              "name": "preventClose",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false,
              "comment": "Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n\nPiping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n\nErrors and closures of the source and destination streams propagate as follows:\n\nAn error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source's error, or with any error that occurs during aborting the destination.\n\nAn error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination's error, or with any error that occurs during canceling the source.\n\nWhen this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n\nIf destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n\nThe signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set."
            },
            "preventAbort": {
              "name": "preventAbort",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "preventCancel": {
              "name": "preventCancel",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            },
            "signal": {
              "name": "signal",
              "required": false,
              "type": "AbortSignal",
              "nullable": false
            }
          }
        }
      },
      "UnderlyingSource": {
        "name": "UnderlyingSource",
        "members": {
          "member": {
            "start": {
              "name": "start",
              "required": false,
              "type": "UnderlyingSourceStartCallback",
              "nullable": false,
              "overrideType": "UnderlyingSourceStartCallback<R>"
            },
            "pull": {
              "name": "pull",
              "required": false,
              "type": "UnderlyingSourcePullCallback",
              "nullable": false,
              "overrideType": "UnderlyingSourcePullCallback<R>"
            },
            "cancel": {
              "name": "cancel",
              "required": false,
              "type": "UnderlyingSourceCancelCallback",
              "nullable": false
            },
            "type": {
              "name": "type",
              "required": false,
              "type": "ReadableStreamType",
              "nullable": false
            },
            "autoAllocateChunkSize": {
              "name": "autoAllocateChunkSize",
              "required": false,
              "type": "unsigned long long",
              "nullable": false
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "UnderlyingSink": {
        "name": "UnderlyingSink",
        "members": {
          "member": {
            "start": {
              "name": "start",
              "required": false,
              "type": "UnderlyingSinkStartCallback",
              "nullable": false
            },
            "write": {
              "name": "write",
              "required": false,
              "type": "UnderlyingSinkWriteCallback",
              "nullable": false,
              "overrideType": "UnderlyingSinkWriteCallback<W>"
            },
            "close": {
              "name": "close",
              "required": false,
              "type": "UnderlyingSinkCloseCallback",
              "nullable": false
            },
            "abort": {
              "name": "abort",
              "required": false,
              "type": "UnderlyingSinkAbortCallback",
              "nullable": false
            },
            "type": {
              "name": "type",
              "required": false,
              "type": "any",
              "nullable": false,
              "overrideType": "undefined"
            }
          }
        },
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "Transformer": {
        "name": "Transformer",
        "members": {
          "member": {
            "start": {
              "name": "start",
              "required": false,
              "type": "TransformerStartCallback",
              "nullable": false,
              "overrideType": "TransformerStartCallback<O>"
            },
            "transform": {
              "name": "transform",
              "required": false,
              "type": "TransformerTransformCallback",
              "nullable": false,
              "overrideType": "TransformerTransformCallback<I, O>"
            },
            "flush": {
              "name": "flush",
              "required": false,
              "type": "TransformerFlushCallback",
              "nullable": false,
              "overrideType": "TransformerFlushCallback<O>"
            },
            "readableType": {
              "name": "readableType",
              "required": false,
              "type": "any",
              "nullable": false,
              "overrideType": "undefined"
            },
            "writableType": {
              "name": "writableType",
              "required": false,
              "type": "any",
              "nullable": false,
              "overrideType": "undefined"
            }
          }
        },
        "typeParameters": [
          {
            "name": "I",
            "default": "any"
          },
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "QueuingStrategy": {
        "name": "QueuingStrategy",
        "members": {
          "member": {
            "highWaterMark": {
              "name": "highWaterMark",
              "required": false,
              "type": "unrestricted double",
              "nullable": false
            },
            "size": {
              "name": "size",
              "required": false,
              "type": "QueuingStrategySize",
              "nullable": false,
              "overrideType": "QueuingStrategySize<T>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "QueuingStrategyInit": {
        "name": "QueuingStrategyInit",
        "members": {
          "member": {
            "highWaterMark": {
              "name": "highWaterMark",
              "required": true,
              "type": "unrestricted double",
              "nullable": false,
              "comment": "Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n\nNote that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw."
            }
          }
        }
      },
      "WebAssemblyInstantiatedSource": {
        "name": "WebAssemblyInstantiatedSource",
        "members": {
          "member": {
            "module": {
              "name": "module",
              "required": true,
              "type": "Module",
              "nullable": false
            },
            "instance": {
              "name": "instance",
              "required": true,
              "type": "Instance",
              "nullable": false
            }
          }
        },
        "legacyNamespace": "WebAssembly"
      },
      "ModuleExportDescriptor": {
        "name": "ModuleExportDescriptor",
        "members": {
          "member": {
            "name": {
              "name": "name",
              "required": true,
              "type": "USVString",
              "nullable": false
            },
            "kind": {
              "name": "kind",
              "required": true,
              "type": "ImportExportKind",
              "nullable": false
            }
          }
        },
        "legacyNamespace": "WebAssembly"
      },
      "ModuleImportDescriptor": {
        "name": "ModuleImportDescriptor",
        "members": {
          "member": {
            "module": {
              "name": "module",
              "required": true,
              "type": "USVString",
              "nullable": false
            },
            "name": {
              "name": "name",
              "required": true,
              "type": "USVString",
              "nullable": false
            },
            "kind": {
              "name": "kind",
              "required": true,
              "type": "ImportExportKind",
              "nullable": false
            }
          }
        },
        "legacyNamespace": "WebAssembly"
      },
      "MemoryDescriptor": {
        "name": "MemoryDescriptor",
        "members": {
          "member": {
            "initial": {
              "name": "initial",
              "required": true,
              "type": "unsigned long",
              "nullable": false
            },
            "maximum": {
              "name": "maximum",
              "required": false,
              "type": "unsigned long",
              "nullable": false
            },
            "shared": {
              "name": "shared",
              "type": "boolean"
            }
          }
        },
        "legacyNamespace": "WebAssembly"
      },
      "TableDescriptor": {
        "name": "TableDescriptor",
        "members": {
          "member": {
            "element": {
              "name": "element",
              "required": true,
              "type": "TableKind",
              "nullable": false
            },
            "initial": {
              "name": "initial",
              "required": true,
              "type": "unsigned long",
              "nullable": false
            },
            "maximum": {
              "name": "maximum",
              "required": false,
              "type": "unsigned long",
              "nullable": false
            }
          }
        },
        "legacyNamespace": "WebAssembly"
      },
      "GlobalDescriptor": {
        "name": "GlobalDescriptor",
        "members": {
          "member": {
            "value": {
              "name": "value",
              "required": true,
              "type": "ValueType",
              "nullable": false,
              "overrideType": "T"
            },
            "mutable": {
              "name": "mutable",
              "default": "false",
              "required": false,
              "type": "boolean",
              "nullable": false
            }
          }
        },
        "legacyNamespace": "WebAssembly",
        "typeParameters": [
          {
            "name": "T",
            "extends": "ValueType",
            "default": "ValueType"
          }
        ]
      },
      "ReadableStreamReadDoneResult": {
        "name": "ReadableStreamReadDoneResult",
        "typeParameters": [
          {
            "name": "T"
          }
        ],
        "members": {
          "member": {
            "done": {
              "name": "done",
              "overrideType": "true",
              "required": true
            },
            "value": {
              "name": "value",
              "overrideType": "T"
            }
          }
        }
      },
      "ReadableStreamReadValueResult": {
        "name": "ReadableStreamReadValueResult",
        "typeParameters": [
          {
            "name": "T"
          }
        ],
        "members": {
          "member": {
            "done": {
              "name": "done",
              "overrideType": "false",
              "required": true
            },
            "value": {
              "name": "value",
              "overrideType": "T",
              "required": true
            }
          }
        }
      },
      "UnderlyingByteSource": {
        "name": "UnderlyingByteSource",
        "members": {
          "member": {
            "type": {
              "name": "type",
              "required": true,
              "overrideType": "\"bytes\""
            },
            "autoAllocateChunkSize": {
              "name": "autoAllocateChunkSize",
              "type": "unsigned long long"
            },
            "start": {
              "name": "start",
              "overrideType": "(controller: ReadableByteStreamController) => any"
            },
            "pull": {
              "name": "pull",
              "overrideType": "(controller: ReadableByteStreamController) => void | PromiseLike<void>"
            },
            "cancel": {
              "name": "cancel",
              "type": "UnderlyingSourceCancelCallback"
            }
          }
        }
      },
      "UnderlyingDefaultSource": {
        "name": "UnderlyingDefaultSource",
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ],
        "members": {
          "member": {
            "type": {
              "name": "type",
              "type": "undefined"
            },
            "start": {
              "name": "start",
              "overrideType": "(controller: ReadableStreamDefaultController<R>) => any"
            },
            "pull": {
              "name": "pull",
              "overrideType": "(controller: ReadableStreamDefaultController<R>) => void | PromiseLike<void>"
            },
            "cancel": {
              "name": "cancel",
              "type": "UnderlyingSourceCancelCallback"
            }
          }
        }
      },
      "ValueTypeMap": {
        "name": "ValueTypeMap",
        "legacyNamespace": "WebAssembly",
        "exposed": "Window Worker Worklet",
        "members": {
          "member": {
            "anyfunc": {
              "name": "anyfunc",
              "overrideType": "Function",
              "required": 1
            },
            "externref": {
              "name": "externref",
              "overrideType": "any",
              "required": 1
            },
            "f32": {
              "name": "f32",
              "overrideType": "number",
              "required": 1
            },
            "f64": {
              "name": "f64",
              "overrideType": "number",
              "required": 1
            },
            "i32": {
              "name": "i32",
              "overrideType": "number",
              "required": 1
            },
            "i64": {
              "name": "i64",
              "overrideType": "bigint",
              "required": 1
            },
            "v128": {
              "name": "v128",
              "overrideType": "never",
              "required": 1
            }
          }
        }
      }
    }
  },
  "enums": {
    "enum": {
      "CompressionFormat": {
        "name": "CompressionFormat",
        "value": [
          "deflate",
          "deflate-raw",
          "gzip"
        ]
      },
      "ReadableStreamReaderMode": {
        "name": "ReadableStreamReaderMode",
        "value": [
          "byob"
        ]
      },
      "ReadableStreamType": {
        "name": "ReadableStreamType",
        "value": [
          "bytes"
        ]
      },
      "ImportExportKind": {
        "name": "ImportExportKind",
        "value": [
          "function",
          "table",
          "memory",
          "global"
        ],
        "legacyNamespace": "WebAssembly"
      },
      "TableKind": {
        "name": "TableKind",
        "value": [
          "externref",
          "anyfunc"
        ],
        "legacyNamespace": "WebAssembly"
      }
    }
  },
  "interfaces": {
    "interface": {
      "CompressionStream": {
        "name": "CompressionStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "readonly": true,
              "overrideType": "ReadableStream<Uint8Array>"
            },
            "writable": {
              "name": "writable",
              "readonly": true,
              "overrideType": "WritableStream<BufferSource>"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "CompressionStream",
              "param": [
                {
                  "name": "format",
                  "type": "CompressionFormat",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "GenericTransformStream"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CompressionStream"
      },
      "DecompressionStream": {
        "name": "DecompressionStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "readonly": true,
              "overrideType": "ReadableStream<Uint8Array>"
            },
            "writable": {
              "name": "writable",
              "readonly": true,
              "overrideType": "WritableStream<BufferSource>"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "DecompressionStream",
              "param": [
                {
                  "name": "format",
                  "type": "CompressionFormat",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "GenericTransformStream"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/DecompressionStream"
      },
      "Event": {
        "name": "Event",
        "constants": {
          "constant": {
            "NONE": {
              "name": "NONE",
              "type": "unsigned short",
              "value": "0"
            },
            "CAPTURING_PHASE": {
              "name": "CAPTURING_PHASE",
              "type": "unsigned short",
              "value": "1"
            },
            "AT_TARGET": {
              "name": "AT_TARGET",
              "type": "unsigned short",
              "value": "2"
            },
            "BUBBLING_PHASE": {
              "name": "BUBBLING_PHASE",
              "type": "unsigned short",
              "value": "3"
            }
          }
        },
        "methods": {
          "method": {
            "composedPath": {
              "name": "composedPath",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "EventTarget",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the invocation target objects of event's path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root's mode is \"closed\" that are not reachable from event's currentTarget.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/composedPath"
            },
            "stopPropagation": {
              "name": "stopPropagation",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/stopPropagation"
            },
            "stopImmediatePropagation": {
              "name": "stopImmediatePropagation",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/stopImmediatePropagation"
            },
            "preventDefault": {
              "name": "preventDefault",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/preventDefault"
            },
            "initEvent": {
              "name": "initEvent",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "type",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "bubbles",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "cancelable",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/initEvent"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "type": {
              "name": "type",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/type"
            },
            "target": {
              "name": "target",
              "type": "EventTarget",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the object to which event is dispatched (its target).",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/target"
            },
            "srcElement": {
              "name": "srcElement",
              "type": "EventTarget",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/srcElement"
            },
            "currentTarget": {
              "name": "currentTarget",
              "type": "EventTarget",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the object whose event listener's callback is currently being invoked.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/currentTarget"
            },
            "eventPhase": {
              "name": "eventPhase",
              "type": "unsigned short",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/eventPhase"
            },
            "cancelBubble": {
              "name": "cancelBubble",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/cancelBubble"
            },
            "bubbles": {
              "name": "bubbles",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/bubbles"
            },
            "cancelable": {
              "name": "cancelable",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/cancelable"
            },
            "returnValue": {
              "name": "returnValue",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/returnValue"
            },
            "defaultPrevented": {
              "name": "defaultPrevented",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/defaultPrevented"
            },
            "composed": {
              "name": "composed",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/composed"
            },
            "isTrusted": {
              "name": "isTrusted",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true if event was dispatched by the user agent, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/isTrusted"
            },
            "timeStamp": {
              "name": "timeStamp",
              "type": "DOMHighResTimeStamp",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the event's timestamp as the number of milliseconds measured relative to the time origin.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event/timeStamp"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Event",
              "param": [
                {
                  "name": "type",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "eventInitDict",
                  "type": "EventInit",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/Event",
        "comment": "An event which takes place in the DOM."
      },
      "CustomEvent": {
        "name": "CustomEvent",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "initCustomEvent": {
              "name": "initCustomEvent",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "type",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "bubbles",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "cancelable",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "detail",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "overrideType": "T"
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CustomEvent/initCustomEvent"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "detail": {
              "name": "detail",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns any custom data event was created with. Typically used for synthetic events.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CustomEvent/detail",
              "overrideType": "T"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "CustomEvent",
              "param": [
                {
                  "name": "type",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "eventInitDict",
                  "type": "CustomEventInit",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "CustomEventInit<T>"
                }
              ],
              "typeParameters": [
                {
                  "name": "T"
                }
              ],
              "overrideType": "CustomEvent<T>"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "Event",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CustomEvent",
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "EventTarget": {
        "name": "EventTarget",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "addEventListener": {
              "name": "addEventListener",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "type",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "callback",
                      "type": "EventListener",
                      "nullable": true,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "EventListenerOrEventListenerObject"
                    },
                    {
                      "name": "options",
                      "type": [
                        {
                          "type": "AddEventListenerOptions",
                          "nullable": false
                        },
                        {
                          "type": "boolean",
                          "nullable": false
                        }
                      ],
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener"
            },
            "removeEventListener": {
              "name": "removeEventListener",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "type",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "callback",
                      "type": "EventListener",
                      "nullable": true,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "EventListenerOrEventListenerObject"
                    },
                    {
                      "name": "options",
                      "type": [
                        {
                          "type": "EventListenerOptions",
                          "nullable": false
                        },
                        {
                          "type": "boolean",
                          "nullable": false
                        }
                      ],
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Removes the event listener in target's event listener list with the same type, callback, and options.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener"
            },
            "dispatchEvent": {
              "name": "dispatchEvent",
              "signature": [
                {
                  "type": "boolean",
                  "nullable": false,
                  "param": [
                    {
                      "name": "event",
                      "type": "Event",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "EventTarget",
              "param": []
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/EventTarget",
        "comment": "EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them."
      },
      "AbortController": {
        "name": "AbortController",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "abort": {
              "name": "abort",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Invoking this method will set this object's AbortSignal's aborted flag and signal to any observers that the associated activity is to be aborted.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortController/abort"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "signal": {
              "name": "signal",
              "type": "AbortSignal",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the AbortSignal object associated with this object.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortController/signal"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "AbortController",
              "param": []
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortController",
        "comment": "A controller object that allows you to abort one or more DOM requests as and when desired."
      },
      "AbortSignal": {
        "name": "AbortSignal",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "abort": {
              "name": "abort",
              "signature": [
                {
                  "type": "AbortSignal",
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static"
            },
            "any": {
              "name": "any",
              "signature": [
                {
                  "type": "AbortSignal",
                  "nullable": false,
                  "param": [
                    {
                      "name": "signals",
                      "type": "sequence",
                      "subtype": {
                        "type": "AbortSignal",
                        "nullable": false
                      },
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static"
            },
            "throwIfAborted": {
              "name": "throwIfAborted",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "aborted": {
              "name": "aborted",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted"
            },
            "reason": {
              "name": "reason",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/reason"
            },
            "onabort": {
              "name": "onabort",
              "type": "EventHandler",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "eventHandler": "abort",
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "EventTarget",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AbortSignal",
        "comment": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object."
      },
      "TextDecoder": {
        "name": "TextDecoder",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "decode": {
              "name": "decode",
              "signature": [
                {
                  "type": "USVString",
                  "nullable": false,
                  "param": [
                    {
                      "name": "input",
                      "type": "AllowSharedBufferSource",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "options",
                      "type": "TextDecodeOptions",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the result of running encoding's decoder. The method can be invoked zero or more times with options's stream set to true, and then once without options's stream (or set to false), to process a fragmented input. If the invocation without options's stream (or set to false) has no input, it's clearest to omit both arguments.\n\n```\nvar string = \"\", decoder = new TextDecoder(encoding), buffer;\nwhile(buffer = next_chunk()) {\n  string += decoder.decode(buffer, {stream:true});\n}\nstring += decoder.decode(); // end-of-queue\n```\n\nIf the error mode is \"fatal\" and encoding's decoder returns error, throws a TypeError.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoder/decode"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "TextDecoder",
              "param": [
                {
                  "name": "label",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                },
                {
                  "name": "options",
                  "type": "TextDecoderOptions",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "TextDecoderCommon"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoder",
        "comment": "A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc. A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays."
      },
      "TextEncoder": {
        "name": "TextEncoder",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "encode": {
              "name": "encode",
              "signature": [
                {
                  "type": "Uint8Array",
                  "nullable": false,
                  "param": [
                    {
                      "name": "input",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Returns the result of running UTF-8's encoder.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextEncoder/encode"
            },
            "encodeInto": {
              "name": "encodeInto",
              "signature": [
                {
                  "type": "TextEncoderEncodeIntoResult",
                  "nullable": false,
                  "param": [
                    {
                      "name": "source",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "destination",
                      "type": "Uint8Array",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "comment": "Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextEncoder/encodeInto"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "TextEncoder",
              "param": []
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "TextEncoderCommon"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextEncoder",
        "comment": "TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays."
      },
      "TextDecoderStream": {
        "name": "TextDecoderStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "readonly": true,
              "overrideType": "ReadableStream<string>"
            },
            "writable": {
              "name": "writable",
              "readonly": true,
              "overrideType": "WritableStream<BufferSource>"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "TextDecoderStream",
              "param": [
                {
                  "name": "label",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                },
                {
                  "name": "options",
                  "type": "TextDecoderOptions",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "TextDecoderCommon",
          "GenericTransformStream"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoderStream"
      },
      "TextEncoderStream": {
        "name": "TextEncoderStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "readonly": true,
              "overrideType": "ReadableStream<Uint8Array>"
            },
            "writable": {
              "name": "writable",
              "readonly": true,
              "overrideType": "WritableStream<string>"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "TextEncoderStream",
              "param": []
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "TextEncoderCommon",
          "GenericTransformStream"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextEncoderStream"
      },
      "ErrorEvent": {
        "name": "ErrorEvent",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "message": {
              "name": "message",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent/message"
            },
            "filename": {
              "name": "filename",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent/filename"
            },
            "lineno": {
              "name": "lineno",
              "type": "unsigned long",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent/lineno"
            },
            "colno": {
              "name": "colno",
              "type": "unsigned long",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent/colno"
            },
            "error": {
              "name": "error",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent/error"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "ErrorEvent",
              "param": [
                {
                  "name": "type",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "eventInitDict",
                  "type": "ErrorEventInit",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "Event",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ErrorEvent",
        "comment": "Events providing information related to errors in scripts or in files."
      },
      "PromiseRejectionEvent": {
        "name": "PromiseRejectionEvent",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "promise": {
              "name": "promise",
              "type": "object",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise",
              "overrideType": "Promise<any>"
            },
            "reason": {
              "name": "reason",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "PromiseRejectionEvent",
              "param": [
                {
                  "name": "type",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "eventInitDict",
                  "type": "PromiseRejectionEventInit",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "Event",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent"
      },
      "MessageEvent": {
        "name": "MessageEvent",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "initMessageEvent": {
              "name": "initMessageEvent",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "type",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "bubbles",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "cancelable",
                      "type": "boolean",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "data",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "origin",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "lastEventId",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "source",
                      "type": "MessageEventSource",
                      "nullable": true,
                      "optional": true,
                      "variadic": false
                    },
                    {
                      "name": "ports",
                      "type": "sequence",
                      "subtype": {
                        "type": "MessagePort",
                        "nullable": false
                      },
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "deprecated": 1
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "data": {
              "name": "data",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Returns the data of the message.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent/data",
              "overrideType": "T"
            },
            "origin": {
              "name": "origin",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Returns the origin of the message, for server-sent events and cross-document messaging.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent/origin"
            },
            "lastEventId": {
              "name": "lastEventId",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Returns the last event ID string, for server-sent events.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent/lastEventId"
            },
            "source": {
              "name": "source",
              "type": "MessageEventSource",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent/source"
            },
            "ports": {
              "name": "ports",
              "type": "FrozenArray",
              "subtype": {
                "type": "MessagePort",
                "nullable": false
              },
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent/ports"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "MessageEvent",
              "param": [
                {
                  "name": "type",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "eventInitDict",
                  "type": "MessageEventInit",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "MessageEventInit<T>"
                }
              ],
              "typeParameters": [
                {
                  "name": "T"
                }
              ],
              "overrideType": "MessageEvent<T>"
            }
          ]
        },
        "exposed": "Window Worker AudioWorklet",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "Event",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessageEvent",
        "comment": "A message received by a target object.",
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "MessagePort": {
        "name": "MessagePort",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "postMessage": {
              "name": "postMessage",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "message",
                      "type": "any",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "transfer",
                      "type": "sequence",
                      "subtype": {
                        "type": "object",
                        "nullable": false
                      },
                      "nullable": false,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "Transferable[]"
                    }
                  ]
                },
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "message",
                      "type": "any",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "options",
                      "type": "StructuredSerializeOptions",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nThrows a \"DataCloneError\" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage"
            },
            "start": {
              "name": "start",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Begins dispatching messages received on the port.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort/start"
            },
            "close": {
              "name": "close",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "comment": "Disconnects the port, so that it is no longer active.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort/close"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "onmessage": {
              "name": "onmessage",
              "type": "EventHandler",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "eventHandler": "message",
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort/message_event"
            },
            "onmessageerror": {
              "name": "onmessageerror",
              "type": "EventHandler",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "eventHandler": "messageerror",
              "exposed": "Window Worker AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort/messageerror_event"
            }
          },
          "namesakes": {}
        },
        "exposed": "Window Worker AudioWorklet",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": true,
        "extends": "EventTarget",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/MessagePort",
        "comment": "This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other.",
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            }
          ]
        }
      },
      "WorkletGlobalScope": {
        "name": "WorkletGlobalScope",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "exposed": "Worklet",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": true,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WorkletGlobalScope"
      },
      "ReadableStream": {
        "name": "ReadableStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "cancel": {
              "name": "cancel",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel"
            },
            "getReader": {
              "name": "getReader",
              "signature": [
                {
                  "type": "ReadableStreamReader",
                  "nullable": false,
                  "param": [
                    {
                      "name": "options",
                      "type": "ReadableStreamGetReaderOptions",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ],
                  "overrideType": "ReadableStreamReader<R>"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader",
              "additionalSignatures": [
                "getReader(options: { mode: \"byob\" }): ReadableStreamBYOBReader",
                "getReader(): ReadableStreamDefaultReader<R>"
              ]
            },
            "pipeThrough": {
              "name": "pipeThrough",
              "signature": [
                {
                  "type": "ReadableStream",
                  "nullable": false,
                  "param": [
                    {
                      "name": "transform",
                      "type": "ReadableWritablePair",
                      "nullable": false,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "ReadableWritablePair<T, R>"
                    },
                    {
                      "name": "options",
                      "type": "StreamPipeOptions",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T"
                    }
                  ],
                  "overrideType": "ReadableStream<T>"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeThrough"
            },
            "pipeTo": {
              "name": "pipeTo",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "destination",
                      "type": "WritableStream",
                      "nullable": false,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "WritableStream<R>"
                    },
                    {
                      "name": "options",
                      "type": "StreamPipeOptions",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeTo"
            },
            "tee": {
              "name": "tee",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "ReadableStream",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [],
                  "overrideType": "[ReadableStream<R>, ReadableStream<R>]"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/tee"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "locked": {
              "name": "locked",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream/locked"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "ReadableStream",
              "param": [
                {
                  "name": "underlyingSource",
                  "type": "UnderlyingByteSource",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "strategy",
                  "type": "QueuingStrategy",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "{ highWaterMark?: number }"
                }
              ],
              "overrideType": "ReadableStream<Uint8Array>"
            },
            {
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ],
              "param": [
                {
                  "name": "underlyingSource",
                  "optional": false,
                  "overrideType": "UnderlyingDefaultSource<R>"
                },
                {
                  "name": "strategy",
                  "optional": true,
                  "overrideType": "QueuingStrategy<R>"
                }
              ],
              "overrideType": "ReadableStream<R>"
            },
            {
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ],
              "param": [
                {
                  "name": "underlyingSource",
                  "optional": true,
                  "overrideType": "UnderlyingSource<R>"
                },
                {
                  "name": "strategy",
                  "optional": true,
                  "overrideType": "QueuingStrategy<R>"
                }
              ],
              "overrideType": "ReadableStream<R>"
            }
          ],
          "force-references": [
            {
              "type": "UnderlyingSource"
            },
            {
              "type": "UnderlyingByteSource"
            },
            {
              "type": "UnderlyingDefaultSource"
            },
            {
              "type": "QueuingStrategy"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": true,
        "iterator": {
          "kind": "iterable",
          "readonly": false,
          "async": true,
          "param": [
            {
              "name": "options",
              "type": "ReadableStreamIteratorOptions",
              "nullable": false,
              "optional": true,
              "variadic": false
            }
          ],
          "type": [
            {
              "type": "any",
              "nullable": false,
              "overrideType": "R"
            }
          ],
          "mdnUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator"
        },
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStream",
        "comment": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.",
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "ReadableStreamDefaultReader": {
        "name": "ReadableStreamDefaultReader",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "read": {
              "name": "read",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "ReadableStreamReadResult",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [],
                  "overrideType": "Promise<ReadableStreamReadResult<R>>"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read"
            },
            "releaseLock": {
              "name": "releaseLock",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/releaseLock"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "ReadableStreamDefaultReader",
              "param": [
                {
                  "name": "stream",
                  "type": "ReadableStream",
                  "nullable": false,
                  "optional": false,
                  "variadic": false,
                  "overrideType": "ReadableStream<R>"
                }
              ],
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ],
              "overrideType": "ReadableStreamDefaultReader<R>"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "ReadableStreamGenericReader"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader",
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "ReadableStreamBYOBReader": {
        "name": "ReadableStreamBYOBReader",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "read": {
              "name": "read",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "ReadableStreamReadResult",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "view",
                      "type": "ArrayBufferView",
                      "nullable": false,
                      "optional": false,
                      "variadic": false,
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "ArrayBufferView"
                    }
                  ],
                  "overrideType": "Promise<ReadableStreamReadResult<T>>"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/read"
            },
            "releaseLock": {
              "name": "releaseLock",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/releaseLock"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "ReadableStreamBYOBReader",
              "param": [
                {
                  "name": "stream",
                  "type": "ReadableStream",
                  "nullable": false,
                  "optional": false,
                  "variadic": false,
                  "overrideType": "ReadableStream<Uint8Array>"
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "implements": [
          "ReadableStreamGenericReader"
        ],
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader"
      },
      "ReadableStreamDefaultController": {
        "name": "ReadableStreamDefaultController",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "close": {
              "name": "close",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close"
            },
            "enqueue": {
              "name": "enqueue",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "chunk",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "overrideType": "R"
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue"
            },
            "error": {
              "name": "error",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "e",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "desiredSize": {
              "name": "desiredSize",
              "type": "unrestricted double",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController",
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "ReadableByteStreamController": {
        "name": "ReadableByteStreamController",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "close": {
              "name": "close",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/close"
            },
            "enqueue": {
              "name": "enqueue",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "chunk",
                      "type": "ArrayBufferView",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue"
            },
            "error": {
              "name": "error",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "e",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "byobRequest": {
              "name": "byobRequest",
              "type": "ReadableStreamBYOBRequest",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/byobRequest"
            },
            "desiredSize": {
              "name": "desiredSize",
              "type": "unrestricted double",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/desiredSize"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController"
      },
      "ReadableStreamBYOBRequest": {
        "name": "ReadableStreamBYOBRequest",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "respond": {
              "name": "respond",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "bytesWritten",
                      "type": "unsigned long long",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respond"
            },
            "respondWithNewView": {
              "name": "respondWithNewView",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "view",
                      "type": "ArrayBufferView",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "view": {
              "name": "view",
              "type": "ArrayBufferView",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/view"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest"
      },
      "WritableStream": {
        "name": "WritableStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "abort": {
              "name": "abort",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStream/abort"
            },
            "close": {
              "name": "close",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStream/close"
            },
            "getWriter": {
              "name": "getWriter",
              "signature": [
                {
                  "type": "WritableStreamDefaultWriter",
                  "nullable": false,
                  "param": [],
                  "overrideType": "WritableStreamDefaultWriter<W>"
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "locked": {
              "name": "locked",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStream/locked"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "WritableStream",
              "param": [
                {
                  "name": "underlyingSink",
                  "type": "object",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "UnderlyingSink<W>"
                },
                {
                  "name": "strategy",
                  "type": "QueuingStrategy",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "QueuingStrategy<W>"
                }
              ],
              "typeParameters": [
                {
                  "name": "W",
                  "default": "any"
                }
              ],
              "overrideType": "WritableStream<W>"
            }
          ],
          "force-references": [
            {
              "type": "UnderlyingSink"
            },
            {
              "type": "QueuingStrategy"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": true,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStream",
        "comment": "This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.",
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "WritableStreamDefaultWriter": {
        "name": "WritableStreamDefaultWriter",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "abort": {
              "name": "abort",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort"
            },
            "close": {
              "name": "close",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close"
            },
            "releaseLock": {
              "name": "releaseLock",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock"
            },
            "write": {
              "name": "write",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "chunk",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "overrideType": "W"
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/write"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "closed": {
              "name": "closed",
              "type": "Promise",
              "subtype": {
                "type": "undefined",
                "nullable": false
              },
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed"
            },
            "desiredSize": {
              "name": "desiredSize",
              "type": "unrestricted double",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize"
            },
            "ready": {
              "name": "ready",
              "type": "Promise",
              "subtype": {
                "type": "undefined",
                "nullable": false
              },
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "WritableStreamDefaultWriter",
              "param": [
                {
                  "name": "stream",
                  "type": "WritableStream",
                  "nullable": false,
                  "optional": false,
                  "variadic": false,
                  "overrideType": "WritableStream<W>"
                }
              ],
              "typeParameters": [
                {
                  "name": "W",
                  "default": "any"
                }
              ],
              "overrideType": "WritableStreamDefaultWriter<W>"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter",
        "comment": "This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink.",
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "WritableStreamDefaultController": {
        "name": "WritableStreamDefaultController",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "error": {
              "name": "error",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "e",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "signal": {
              "name": "signal",
              "type": "AbortSignal",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController",
        "comment": "This Streams API interface represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate."
      },
      "TransformStream": {
        "name": "TransformStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "type": "ReadableStream",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStream/readable",
              "overrideType": "ReadableStream<O>"
            },
            "writable": {
              "name": "writable",
              "type": "WritableStream",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStream/writable",
              "overrideType": "WritableStream<I>"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "TransformStream",
              "param": [
                {
                  "name": "transformer",
                  "type": "object",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "Transformer<I, O>"
                },
                {
                  "name": "writableStrategy",
                  "type": "QueuingStrategy",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "QueuingStrategy<I>"
                },
                {
                  "name": "readableStrategy",
                  "type": "QueuingStrategy",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "overrideType": "QueuingStrategy<O>"
                }
              ],
              "typeParameters": [
                {
                  "name": "I",
                  "default": "any"
                },
                {
                  "name": "O",
                  "default": "any"
                }
              ],
              "overrideType": "TransformStream<I, O>"
            }
          ],
          "force-references": [
            {
              "type": "Transformer"
            },
            {
              "type": "QueuingStrategy"
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": true,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStream",
        "typeParameters": [
          {
            "name": "I",
            "default": "any"
          },
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "TransformStreamDefaultController": {
        "name": "TransformStreamDefaultController",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "enqueue": {
              "name": "enqueue",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "chunk",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "overrideType": "O"
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue"
            },
            "error": {
              "name": "error",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error"
            },
            "terminate": {
              "name": "terminate",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "desiredSize": {
              "name": "desiredSize",
              "type": "unrestricted double",
              "nullable": true,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize"
            }
          },
          "namesakes": {}
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController",
        "typeParameters": [
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "ByteLengthQueuingStrategy": {
        "name": "ByteLengthQueuingStrategy",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "highWaterMark": {
              "name": "highWaterMark",
              "type": "unrestricted double",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/highWaterMark"
            },
            "size": {
              "name": "size",
              "type": "Function",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/size",
              "overrideType": [
                "QueuingStrategySize<ArrayBufferView>"
              ]
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "ByteLengthQueuingStrategy",
              "param": [
                {
                  "name": "init",
                  "type": "QueuingStrategyInit",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy",
        "comment": "This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams.",
        "extends": "QueuingStrategy<ArrayBufferView>"
      },
      "CountQueuingStrategy": {
        "name": "CountQueuingStrategy",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "highWaterMark": {
              "name": "highWaterMark",
              "type": "unrestricted double",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/highWaterMark"
            },
            "size": {
              "name": "size",
              "type": "Function",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/size",
              "overrideType": [
                "QueuingStrategySize"
              ]
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "CountQueuingStrategy",
              "param": [
                {
                  "name": "init",
                  "type": "QueuingStrategyInit",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy",
        "comment": "This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams.",
        "extends": "QueuingStrategy"
      },
      "URL": {
        "name": "URL",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "parse": {
              "name": "parse",
              "signature": [
                {
                  "type": "URL",
                  "nullable": true,
                  "param": [
                    {
                      "name": "url",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "base",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "additionalTypes": [
                        "URL"
                      ]
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/parse_static"
            },
            "canParse": {
              "name": "canParse",
              "signature": [
                {
                  "type": "boolean",
                  "nullable": false,
                  "param": [
                    {
                      "name": "url",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "base",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false,
                      "additionalTypes": [
                        "URL"
                      ]
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/canParse_static"
            },
            "toJSON": {
              "name": "toJSON",
              "signature": [
                {
                  "type": "USVString",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/toJSON"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "href": {
              "name": "href",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": true,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/href"
            },
            "origin": {
              "name": "origin",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/origin"
            },
            "protocol": {
              "name": "protocol",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/protocol"
            },
            "username": {
              "name": "username",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/username"
            },
            "password": {
              "name": "password",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/password"
            },
            "host": {
              "name": "host",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/host"
            },
            "hostname": {
              "name": "hostname",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/hostname"
            },
            "port": {
              "name": "port",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/port"
            },
            "pathname": {
              "name": "pathname",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/pathname"
            },
            "search": {
              "name": "search",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/search"
            },
            "searchParams": {
              "name": "searchParams",
              "type": "URLSearchParams",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/searchParams"
            },
            "hash": {
              "name": "hash",
              "type": "USVString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL/hash"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "URL",
              "param": [
                {
                  "name": "url",
                  "type": "USVString",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "base",
                  "type": "USVString",
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "additionalTypes": [
                    "URL"
                  ]
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [
          "webkitURL"
        ],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URL",
        "comment": "The URL interface represents an object providing static methods used for creating object URLs."
      },
      "URLSearchParams": {
        "name": "URLSearchParams",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "append": {
              "name": "append",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/append",
              "comment": "Appends a specified key/value pair as a new search parameter."
            },
            "delete": {
              "name": "delete",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/delete",
              "comment": "Deletes the given search parameter, and its associated value, from the list of all search parameters."
            },
            "get": {
              "name": "get",
              "signature": [
                {
                  "type": "USVString",
                  "nullable": true,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/get",
              "comment": "Returns the first value associated to the given search parameter."
            },
            "getAll": {
              "name": "getAll",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "USVString",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll",
              "comment": "Returns all the values association with a given search parameter."
            },
            "has": {
              "name": "has",
              "signature": [
                {
                  "type": "boolean",
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "USVString",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/has",
              "comment": "Returns a Boolean indicating if such a search parameter exists."
            },
            "set": {
              "name": "set",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "USVString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/set",
              "comment": "Sets the value associated to a given search parameter to the given value. If there were several values, delete the others."
            },
            "sort": {
              "name": "sort",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/sort"
            },
            "toString": {
              "comment": "Returns a string containing a query string suitable for use in a URL. Does not include the question mark."
            }
          },
          "constructor": "Constructor returning a URLSearchParams object."
        },
        "anonymousMethods": {
          "method": [
            {
              "signature": [
                {
                  "type": "DOMString",
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": true,
              "exposed": "*",
              "secureContext": false
            }
          ]
        },
        "properties": {
          "property": {
            "size": {
              "name": "size",
              "type": "unsigned long",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams/size"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "URLSearchParams",
              "param": [
                {
                  "name": "init",
                  "type": [
                    {
                      "type": "sequence",
                      "subtype": {
                        "type": "sequence",
                        "subtype": {
                          "type": "USVString",
                          "nullable": false
                        },
                        "nullable": false
                      },
                      "nullable": false
                    },
                    {
                      "type": "record",
                      "subtype": [
                        {
                          "type": "USVString",
                          "nullable": false
                        },
                        {
                          "type": "USVString",
                          "nullable": false
                        }
                      ],
                      "nullable": false
                    },
                    {
                      "type": "USVString",
                      "nullable": false
                    }
                  ],
                  "nullable": false,
                  "optional": true,
                  "variadic": false,
                  "additionalTypes": [
                    "URLSearchParams"
                  ]
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "iterator": {
          "kind": "iterable",
          "readonly": false,
          "async": false,
          "param": [],
          "type": [
            {
              "type": "USVString",
              "nullable": false
            },
            {
              "type": "USVString",
              "nullable": false
            }
          ],
          "comments": {
            "comment": {
              "entries": "Returns an array of key, value pairs for every entry in the search params.",
              "keys": "Returns a list of keys in the search params.",
              "values": "Returns a list of values in the search params."
            }
          }
        },
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/URLSearchParams"
      },
      "Module": {
        "name": "Module",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "exports": {
              "name": "exports",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "ModuleExportDescriptor",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "moduleObject",
                      "type": "Module",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/exports_static"
            },
            "imports": {
              "name": "imports",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "ModuleImportDescriptor",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "moduleObject",
                      "type": "Module",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/imports_static"
            },
            "customSections": {
              "name": "customSections",
              "signature": [
                {
                  "type": "sequence",
                  "subtype": {
                    "type": "ArrayBuffer",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "moduleObject",
                      "type": "Module",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "sectionName",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": true,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {},
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Module",
              "param": [
                {
                  "name": "bytes",
                  "type": "BufferSource",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "legacyNamespace": "WebAssembly",
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module"
      },
      "Instance": {
        "name": "Instance",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "exports": {
              "name": "exports",
              "type": "Exports",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance/exports"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Instance",
              "param": [
                {
                  "name": "module",
                  "type": "Module",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "importObject",
                  "type": "Imports",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "legacyNamespace": "WebAssembly",
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance"
      },
      "Memory": {
        "name": "Memory",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "grow": {
              "name": "grow",
              "signature": [
                {
                  "type": "unsigned long",
                  "nullable": false,
                  "param": [
                    {
                      "name": "delta",
                      "type": "unsigned long",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/grow"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "buffer": {
              "name": "buffer",
              "type": "ArrayBuffer",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/buffer"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Memory",
              "param": [
                {
                  "name": "descriptor",
                  "type": "MemoryDescriptor",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "legacyNamespace": "WebAssembly",
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory"
      },
      "Table": {
        "name": "Table",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "grow": {
              "name": "grow",
              "signature": [
                {
                  "type": "unsigned long",
                  "nullable": false,
                  "param": [
                    {
                      "name": "delta",
                      "type": "unsigned long",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow"
            },
            "get": {
              "name": "get",
              "signature": [
                {
                  "type": "any",
                  "nullable": false,
                  "param": [
                    {
                      "name": "index",
                      "type": "unsigned long",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get"
            },
            "set": {
              "name": "set",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "index",
                      "type": "unsigned long",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "value",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "length": {
              "name": "length",
              "type": "unsigned long",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/length"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Table",
              "param": [
                {
                  "name": "descriptor",
                  "type": "TableDescriptor",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "value",
                  "type": "any",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "legacyNamespace": "WebAssembly",
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table"
      },
      "Global": {
        "name": "Global",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "valueOf": {
              "name": "valueOf",
              "signature": [
                {
                  "type": "any",
                  "nullable": false,
                  "param": []
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "*",
              "secureContext": false,
              "overrideSignatures": [
                "valueOf(): ValueTypeMap[T]"
              ]
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "value": {
              "name": "value",
              "type": "any",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": false,
              "exposed": "*",
              "secureContext": false,
              "overrideType": "ValueTypeMap[T]"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "Global",
              "param": [
                {
                  "name": "descriptor",
                  "type": "GlobalDescriptor",
                  "nullable": false,
                  "optional": false,
                  "variadic": false
                },
                {
                  "name": "v",
                  "type": "any",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ],
          "overrideSignatures": [
            "new<T extends ValueType = ValueType>(descriptor: GlobalDescriptor<T>, v?: ValueTypeMap[T]): Global<T>"
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "legacyNamespace": "WebAssembly",
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Global",
        "typeParameters": [
          {
            "name": "T",
            "extends": "ValueType",
            "default": "ValueType"
          }
        ]
      },
      "AudioWorkletGlobalScope": {
        "name": "AudioWorkletGlobalScope",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "registerProcessor": {
              "name": "registerProcessor",
              "signature": [
                {
                  "type": "undefined",
                  "nullable": false,
                  "param": [
                    {
                      "name": "name",
                      "type": "DOMString",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    },
                    {
                      "name": "processorCtor",
                      "type": "AudioWorkletProcessorConstructor",
                      "nullable": false,
                      "optional": false,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "exposed": "AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletGlobalScope/registerProcessor"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "currentFrame": {
              "name": "currentFrame",
              "type": "unsigned long long",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletGlobalScope/currentFrame"
            },
            "currentTime": {
              "name": "currentTime",
              "type": "double",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletGlobalScope/currentTime"
            },
            "sampleRate": {
              "name": "sampleRate",
              "type": "float",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletGlobalScope/sampleRate"
            }
          },
          "namesakes": {}
        },
        "exposed": "AudioWorklet",
        "global": "Worklet AudioWorklet",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "extends": "WorkletGlobalScope",
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletGlobalScope"
      },
      "AudioWorkletProcessor": {
        "name": "AudioWorkletProcessor",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "port": {
              "name": "port",
              "type": "MessagePort",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "AudioWorklet",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletProcessor/port"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "AudioWorkletProcessor",
              "param": []
            }
          ]
        },
        "exposed": "AudioWorklet",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/AudioWorkletProcessor"
      },
      "DOMException": {
        "name": "DOMException",
        "constants": {
          "constant": {
            "INDEX_SIZE_ERR": {
              "name": "INDEX_SIZE_ERR",
              "type": "unsigned short",
              "value": "1"
            },
            "DOMSTRING_SIZE_ERR": {
              "name": "DOMSTRING_SIZE_ERR",
              "type": "unsigned short",
              "value": "2"
            },
            "HIERARCHY_REQUEST_ERR": {
              "name": "HIERARCHY_REQUEST_ERR",
              "type": "unsigned short",
              "value": "3"
            },
            "WRONG_DOCUMENT_ERR": {
              "name": "WRONG_DOCUMENT_ERR",
              "type": "unsigned short",
              "value": "4"
            },
            "INVALID_CHARACTER_ERR": {
              "name": "INVALID_CHARACTER_ERR",
              "type": "unsigned short",
              "value": "5"
            },
            "NO_DATA_ALLOWED_ERR": {
              "name": "NO_DATA_ALLOWED_ERR",
              "type": "unsigned short",
              "value": "6"
            },
            "NO_MODIFICATION_ALLOWED_ERR": {
              "name": "NO_MODIFICATION_ALLOWED_ERR",
              "type": "unsigned short",
              "value": "7"
            },
            "NOT_FOUND_ERR": {
              "name": "NOT_FOUND_ERR",
              "type": "unsigned short",
              "value": "8"
            },
            "NOT_SUPPORTED_ERR": {
              "name": "NOT_SUPPORTED_ERR",
              "type": "unsigned short",
              "value": "9"
            },
            "INUSE_ATTRIBUTE_ERR": {
              "name": "INUSE_ATTRIBUTE_ERR",
              "type": "unsigned short",
              "value": "10"
            },
            "INVALID_STATE_ERR": {
              "name": "INVALID_STATE_ERR",
              "type": "unsigned short",
              "value": "11"
            },
            "SYNTAX_ERR": {
              "name": "SYNTAX_ERR",
              "type": "unsigned short",
              "value": "12"
            },
            "INVALID_MODIFICATION_ERR": {
              "name": "INVALID_MODIFICATION_ERR",
              "type": "unsigned short",
              "value": "13"
            },
            "NAMESPACE_ERR": {
              "name": "NAMESPACE_ERR",
              "type": "unsigned short",
              "value": "14"
            },
            "INVALID_ACCESS_ERR": {
              "name": "INVALID_ACCESS_ERR",
              "type": "unsigned short",
              "value": "15"
            },
            "VALIDATION_ERR": {
              "name": "VALIDATION_ERR",
              "type": "unsigned short",
              "value": "16"
            },
            "TYPE_MISMATCH_ERR": {
              "name": "TYPE_MISMATCH_ERR",
              "type": "unsigned short",
              "value": "17"
            },
            "SECURITY_ERR": {
              "name": "SECURITY_ERR",
              "type": "unsigned short",
              "value": "18"
            },
            "NETWORK_ERR": {
              "name": "NETWORK_ERR",
              "type": "unsigned short",
              "value": "19"
            },
            "ABORT_ERR": {
              "name": "ABORT_ERR",
              "type": "unsigned short",
              "value": "20"
            },
            "URL_MISMATCH_ERR": {
              "name": "URL_MISMATCH_ERR",
              "type": "unsigned short",
              "value": "21"
            },
            "QUOTA_EXCEEDED_ERR": {
              "name": "QUOTA_EXCEEDED_ERR",
              "type": "unsigned short",
              "value": "22"
            },
            "TIMEOUT_ERR": {
              "name": "TIMEOUT_ERR",
              "type": "unsigned short",
              "value": "23"
            },
            "INVALID_NODE_TYPE_ERR": {
              "name": "INVALID_NODE_TYPE_ERR",
              "type": "unsigned short",
              "value": "24"
            },
            "DATA_CLONE_ERR": {
              "name": "DATA_CLONE_ERR",
              "type": "unsigned short",
              "value": "25"
            }
          }
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "name": {
              "name": "name",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/DOMException/name"
            },
            "message": {
              "name": "message",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/DOMException/message"
            },
            "code": {
              "name": "code",
              "type": "unsigned short",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "exposed": "*",
              "secureContext": false,
              "deprecated": 1,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/DOMException/code"
            }
          },
          "namesakes": {}
        },
        "constructor": {
          "signature": [
            {
              "type": "DOMException",
              "param": [
                {
                  "name": "message",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                },
                {
                  "name": "name",
                  "type": "DOMString",
                  "nullable": false,
                  "optional": true,
                  "variadic": false
                }
              ]
            }
          ]
        },
        "exposed": "*",
        "noInterfaceObject": false,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mdnUrl": "https://developer.mozilla.org/docs/Web/API/DOMException",
        "comment": "An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.",
        "extends": "Error"
      },
      "AudioWorkletProcessorImpl": {
        "name": "AudioWorkletProcessorImpl",
        "extends": "AudioWorkletProcessor",
        "methods": {
          "method": {
            "process": {
              "name": "process",
              "overrideSignatures": [
                "process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: Record<string, Float32Array>): boolean"
              ]
            }
          }
        },
        "exposed": "AudioWorklet",
        "noInterfaceObject": true
      },
      "CompileError": {
        "name": "CompileError",
        "extends": "Error",
        "legacyNamespace": "WebAssembly",
        "constructor": {
          "overrideSignatures": [
            "new(message?: string): CompileError",
            "(message?: string): CompileError"
          ]
        }
      },
      "EventListener": {
        "name": "EventListener",
        "noInterfaceObject": true,
        "methods": {
          "method": {
            "callable": {
              "overrideSignatures": [
                "(evt: Event): void"
              ]
            }
          }
        }
      },
      "EventListenerObject": {
        "name": "EventListenerObject",
        "noInterfaceObject": true,
        "methods": {
          "method": {
            "handleEvent": {
              "overrideSignatures": [
                "handleEvent(object: Event): void"
              ]
            }
          }
        }
      },
      "RuntimeError": {
        "name": "RuntimeError",
        "extends": "Error",
        "legacyNamespace": "WebAssembly",
        "constructor": {
          "overrideSignatures": [
            "new(message?: string): RuntimeError",
            "(message?: string): RuntimeError"
          ]
        }
      },
      "LinkError": {
        "name": "LinkError",
        "extends": "Error",
        "legacyNamespace": "WebAssembly",
        "constructor": {
          "overrideSignatures": [
            "new(message?: string): LinkError",
            "(message?: string): LinkError"
          ]
        }
      }
    }
  },
  "mixins": {
    "mixin": {
      "TextDecoderCommon": {
        "name": "TextDecoderCommon",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "encoding": {
              "name": "encoding",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "comment": "Returns encoding's name, lowercased.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoder/encoding"
            },
            "fatal": {
              "name": "fatal",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "comment": "Returns true if error mode is \"fatal\", otherwise false.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoder/fatal"
            },
            "ignoreBOM": {
              "name": "ignoreBOM",
              "type": "boolean",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "comment": "Returns the value of ignore BOM.",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextDecoder/ignoreBOM"
            }
          },
          "namesakes": {}
        },
        "noInterfaceObject": true,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mixin": true
      },
      "TextEncoderCommon": {
        "name": "TextEncoderCommon",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "encoding": {
              "name": "encoding",
              "type": "DOMString",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "comment": "Returns \"utf-8\".",
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/TextEncoder/encoding"
            }
          },
          "namesakes": {}
        },
        "noInterfaceObject": true,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mixin": true
      },
      "ReadableStreamGenericReader": {
        "name": "ReadableStreamGenericReader",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {
            "cancel": {
              "name": "cancel",
              "signature": [
                {
                  "type": "Promise",
                  "subtype": {
                    "type": "undefined",
                    "nullable": false
                  },
                  "nullable": false,
                  "param": [
                    {
                      "name": "reason",
                      "type": "any",
                      "nullable": false,
                      "optional": true,
                      "variadic": false
                    }
                  ]
                }
              ],
              "getter": false,
              "static": false,
              "stringifier": false,
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel"
            }
          }
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "closed": {
              "name": "closed",
              "type": "Promise",
              "subtype": {
                "type": "undefined",
                "nullable": false
              },
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed"
            }
          },
          "namesakes": {}
        },
        "noInterfaceObject": true,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mixin": true
      },
      "GenericTransformStream": {
        "name": "GenericTransformStream",
        "constants": {
          "constant": {}
        },
        "methods": {
          "method": {}
        },
        "anonymousMethods": {
          "method": []
        },
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "type": "ReadableStream",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CompressionStream/readable"
            },
            "writable": {
              "name": "writable",
              "type": "WritableStream",
              "nullable": false,
              "static": false,
              "stringifier": false,
              "readonly": true,
              "secureContext": false,
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CompressionStream/writable"
            }
          },
          "namesakes": {}
        },
        "noInterfaceObject": true,
        "legacyWindowAlias": [],
        "secureContext": false,
        "transferable": false,
        "mixin": true
      }
    }
  },
  "typedefs": {
    "typedef": [
      {
        "name": "DOMHighResTimeStamp",
        "type": "double",
        "nullable": false
      },
      {
        "name": "MessageEventSource",
        "type": "MessagePort",
        "nullable": false
      },
      {
        "name": "ReadableStreamReader",
        "type": [
          {
            "type": "ReadableStreamDefaultReader",
            "nullable": false
          },
          {
            "type": "ReadableStreamBYOBReader",
            "nullable": false
          },
          {
            "type": "ReadableStreamDefaultReader"
          },
          {
            "type": "ReadableStreamBYOBReader"
          }
        ],
        "nullable": false,
        "typeParameters": [
          {
            "name": "T"
          }
        ],
        "overrideType": "ReadableStreamDefaultReader<T> | ReadableStreamBYOBReader"
      },
      {
        "name": "ReadableStreamController",
        "type": [
          {
            "type": "ReadableStreamDefaultController",
            "nullable": false
          },
          {
            "type": "ReadableByteStreamController",
            "nullable": false
          }
        ],
        "nullable": false,
        "overrideType": "ReadableStreamDefaultController<T> | ReadableByteStreamController",
        "typeParameters": [
          {
            "name": "T"
          }
        ]
      },
      {
        "name": "BufferSource",
        "type": [
          {
            "type": "ArrayBufferView",
            "nullable": false
          },
          {
            "type": "ArrayBuffer",
            "nullable": false
          }
        ],
        "nullable": false
      },
      {
        "name": "AllowSharedBufferSource",
        "type": [
          {
            "type": "ArrayBuffer",
            "nullable": false
          },
          {
            "type": "SharedArrayBuffer",
            "nullable": false
          },
          {
            "type": "ArrayBufferView",
            "nullable": false
          }
        ],
        "nullable": false,
        "overrideType": "ArrayBuffer | ArrayBufferView"
      },
      {
        "name": "ValueType",
        "legacyNamespace": "WebAssembly",
        "overrideType": "keyof ValueTypeMap"
      },
      {
        "name": "ExportValue",
        "legacyNamespace": "WebAssembly",
        "overrideType": "Function | Global | Memory | Table"
      },
      {
        "name": "Exports",
        "legacyNamespace": "WebAssembly",
        "type": "record",
        "subtype": [
          {
            "type": "DOMString"
          },
          {
            "type": "ExportValue"
          }
        ]
      },
      {
        "name": "ImportValue",
        "legacyNamespace": "WebAssembly",
        "overrideType": "ExportValue | number"
      },
      {
        "name": "ModuleImports",
        "legacyNamespace": "WebAssembly",
        "type": "record",
        "subtype": [
          {
            "type": "DOMString"
          },
          {
            "type": "ImportValue"
          }
        ]
      },
      {
        "name": "Imports",
        "legacyNamespace": "WebAssembly",
        "type": "record",
        "subtype": [
          {
            "type": "DOMString"
          },
          {
            "type": "ModuleImports"
          }
        ]
      },
      {
        "name": "ReadableStreamReadResult",
        "typeParameters": [
          {
            "name": "T"
          }
        ],
        "type": [
          {
            "type": "ReadableStreamReadValueResult"
          },
          {
            "type": "ReadableStreamReadDoneResult"
          }
        ],
        "overrideType": "ReadableStreamReadValueResult<T> | ReadableStreamReadDoneResult<T>"
      },
      {
        "name": "EventListenerOrEventListenerObject",
        "overrideType": "EventListener | EventListenerObject"
      },
      {
        "name": "Transferable",
        "type": [
          {
            "type": "MessagePort"
          },
          {
            "type": "ReadableStream"
          },
          {
            "type": "WritableStream"
          },
          {
            "type": "TransformStream"
          },
          {
            "type": "ArrayBuffer"
          }
        ]
      }
    ]
  },
  "namespaces": [
    {
      "name": "console",
      "namespace": true,
      "constructor": {
        "signature": []
      },
      "methods": {
        "method": {
          "assert": {
            "name": "assert",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "condition",
                    "type": "boolean",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  },
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/assert_static"
          },
          "clear": {
            "name": "clear",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": []
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/clear_static"
          },
          "debug": {
            "name": "debug",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/debug_static"
          },
          "error": {
            "name": "error",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/error_static"
          },
          "info": {
            "name": "info",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/info_static"
          },
          "log": {
            "name": "log",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/log_static"
          },
          "table": {
            "name": "table",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "tabularData",
                    "type": "any",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  },
                  {
                    "name": "properties",
                    "type": "sequence",
                    "subtype": {
                      "type": "DOMString",
                      "nullable": false
                    },
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/table_static"
          },
          "trace": {
            "name": "trace",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/trace_static"
          },
          "warn": {
            "name": "warn",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/warn_static"
          },
          "dir": {
            "name": "dir",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "item",
                    "type": "any",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  },
                  {
                    "name": "options",
                    "type": "object",
                    "nullable": true,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/dir_static"
          },
          "dirxml": {
            "name": "dirxml",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/dirxml_static"
          },
          "count": {
            "name": "count",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "label",
                    "type": "DOMString",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/count_static"
          },
          "countReset": {
            "name": "countReset",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "label",
                    "type": "DOMString",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/countReset_static"
          },
          "group": {
            "name": "group",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/group_static"
          },
          "groupCollapsed": {
            "name": "groupCollapsed",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static"
          },
          "groupEnd": {
            "name": "groupEnd",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": []
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/groupEnd_static"
          },
          "time": {
            "name": "time",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "label",
                    "type": "DOMString",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/time_static"
          },
          "timeLog": {
            "name": "timeLog",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "label",
                    "type": "DOMString",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  },
                  {
                    "name": "data",
                    "type": "any",
                    "nullable": false,
                    "optional": false,
                    "variadic": true
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/timeLog_static"
          },
          "timeEnd": {
            "name": "timeEnd",
            "signature": [
              {
                "type": "undefined",
                "nullable": false,
                "param": [
                  {
                    "name": "label",
                    "type": "DOMString",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console/timeEnd_static"
          },
          "timeStamp": {
            "name": "timeStamp",
            "overrideSignatures": [
              "timeStamp(label?: string): void"
            ]
          }
        }
      },
      "properties": {
        "property": {}
      },
      "exposed": "*",
      "mdnUrl": "https://developer.mozilla.org/docs/Web/API/console"
    },
    {
      "name": "WebAssembly",
      "namespace": true,
      "constructor": {
        "signature": []
      },
      "methods": {
        "method": {
          "validate": {
            "name": "validate",
            "signature": [
              {
                "type": "boolean",
                "nullable": false,
                "param": [
                  {
                    "name": "bytes",
                    "type": "BufferSource",
                    "nullable": false,
                    "optional": false,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/validate_static"
          },
          "compile": {
            "name": "compile",
            "signature": [
              {
                "type": "Promise",
                "subtype": {
                  "type": "Module",
                  "nullable": false
                },
                "nullable": false,
                "param": [
                  {
                    "name": "bytes",
                    "type": "BufferSource",
                    "nullable": false,
                    "optional": false,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/compile_static"
          },
          "instantiate": {
            "name": "instantiate",
            "signature": [
              {
                "type": "Promise",
                "subtype": {
                  "type": "WebAssemblyInstantiatedSource",
                  "nullable": false
                },
                "nullable": false,
                "param": [
                  {
                    "name": "bytes",
                    "type": "BufferSource",
                    "nullable": false,
                    "optional": false,
                    "variadic": false
                  },
                  {
                    "name": "importObject",
                    "type": "Imports",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              },
              {
                "type": "Promise",
                "subtype": {
                  "type": "Instance",
                  "nullable": false
                },
                "nullable": false,
                "param": [
                  {
                    "name": "moduleObject",
                    "type": "Module",
                    "nullable": false,
                    "optional": false,
                    "variadic": false
                  },
                  {
                    "name": "importObject",
                    "type": "Imports",
                    "nullable": false,
                    "optional": true,
                    "variadic": false
                  }
                ]
              }
            ],
            "getter": false,
            "static": false,
            "stringifier": false,
            "exposed": "*",
            "secureContext": false,
            "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/instantiate_static"
          }
        }
      },
      "properties": {
        "property": {}
      },
      "exposed": "*",
      "mdnUrl": "https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface"
    }
  ],
  "events": {}
}